name: enigma2

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        gcc: [13]
    steps:
    - uses: actions/checkout@v2
    - name: install gcc ${{ matrix.gcc }}
      run: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get -q update
        sudo apt install g++-${{ matrix.gcc }}
    - name: install python packages
      run: |
        pip3 install netifaces pyopenssl python-wifi service_identity twisted
    - name: install dev packages
      run: |
        sudo apt-get -q update
        sudo apt-get install linux-libc-dev
        sudo apt-get install git
        sudo apt-get install build-essential
        sudo apt-get install automake
        sudo apt-get install libtool
        sudo apt-get install python2
        sudo apt-get install zlib1g-dev
        sudo apt-get install gettext
        sudo apt-get install swig
        sudo apt-get install libfreetype6-dev
        sudo apt-get install libfribidi-dev
        sudo apt-get install libssl-dev
        sudo apt-get install libavahi-client-dev
        sudo apt-get install libjpeg-turbo8-dev
        sudo apt-get install libgif-dev
        sudo apt-get install mm-common
    - name: build dependencies
      env: 
        CC: "gcc-${{ matrix.gcc }}"
        CXX: "g++-${{ matrix.gcc }}"
      run: |
        echo installing libdvbsi++
        pushd .
        cd /tmp
        git clone --depth 1 https://github.com/OpenVisionE2/libdvbsi.git
        cd libdvbsi
        autoreconf -i
        ./configure
        make
        sudo make install
        popd
        echo installing tuxbox
        pushd .
        cd /tmp
        git clone --depth 1 https://github.com/OpenVisionE2/tuxtxt.git
        cd tuxtxt/libtuxtxt
        autoreconf -i
        ./configure --with-boxtype=h9 DVB_API_VERSION=5
        make
        sudo make install
        cd ../tuxtxt
        autoreconf -i
        ./configure --with-boxtype=h9 DVB_API_VERSION=5
        make
        sudo make install
        popd
        echo installing libsigc++3
        pushd .
        cd /tmp
        git clone --depth 1 https://github.com/dbus-cxx/libsigc--3.0.git
        cd libsigc--3.0
        autoreconf -i
        ./configure
        make
        sudo make install
        popd
    - name: build enigma2 (not python files)
      env: 
        CC: "gcc-${{ matrix.gcc }}"
        CXX: "g++-${{ matrix.gcc }}"
      run: |
        echo compiling enigma2
        autoreconf -i
        ./configure --with-libsdl=no --with-boxtype=h9 --with-boxbrand=airdigital --enable-dependency-tracking ac_cv_prog_c_openmp=-fopenmp --with-nolcd
        make
    - name: compile python2
      run: |
        python2 -m compileall .
    - name: compile python3
      run: |
        python3 -m compileall .
    - name: compile po files
      run: |
        find . -type f -name "*.po" -exec msgfmt {} -o {}.mo \;
        echo done!
